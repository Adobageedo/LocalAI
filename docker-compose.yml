services:
  # Front_LocalAI - Next.js Frontend
  front_localai:
    build:
      context: ./Front_LocalAI
      dockerfile: docker/Dockerfile
      target: development
    container_name: front-localai
    volumes:
      - ./Front_LocalAI:/app
      - /app/node_modules
    ports:
      - "3000:3000"  # Default Next.js port
    env_file:
      - ./Front_LocalAI/.env.local
    restart: unless-stopped
    networks:
      - rag-network
  # Qdrant - Base de données vectorielle pour RAG
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"  # API HTTP
      - "6334:6334"  # API gRPC
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - rag-network

  # RAG Backend API - FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    # On expose seulement sur le réseau interne, Nginx fera le proxy
    ports:
      - "8000:8000"
    env_file: ./backend/backend/core/.env
    volumes:
      #- ./backend:/app  # Pour le développement, permet de modifier les fichiers en direct
      - ./backend/data:/app/data  # Persistence des données (registre JSON)
      - /tmp:/tmp  
    depends_on:
      - qdrant
    restart: unless-stopped
    networks:
      - rag-network

  # Nginx - Serveur web et proxy inverse
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/chardouin.fr/html:/var/www/chardouin.fr/html:ro
      - /var/www/hardouinosteopathe.fr/html:/var/www/hardouinosteopathe.fr/html:ro
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - rag-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: localai
      POSTGRES_PASSWORD: localai_password
      POSTGRES_DB: localai_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Mount the initialization script
      - ./postgres:/docker-entrypoint-initdb.d
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge

volumes:
  qdrant_data:  # Stockage persistant pour Qdrant
  postgres_data:
    driver: local